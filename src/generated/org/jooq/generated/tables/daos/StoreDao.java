/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.Store;
import org.jooq.generated.tables.records.StoreRecord;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class StoreDao extends DAOImpl<StoreRecord, org.jooq.generated.tables.pojos.Store, UInteger> {

    /**
     * Create a new StoreDao without any configuration
     */
    public StoreDao() {
        super(Store.STORE, org.jooq.generated.tables.pojos.Store.class);
    }

    /**
     * Create a new StoreDao with an attached configuration
     */
    public StoreDao(Configuration configuration) {
        super(Store.STORE, org.jooq.generated.tables.pojos.Store.class, configuration);
    }

    @Override
    public UInteger getId(org.jooq.generated.tables.pojos.Store object) {
        return object.getStoreId();
    }

    /**
     * Fetch records that have <code>store_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Store> fetchRangeOfStoreId(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(Store.STORE.STORE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>store_id IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Store> fetchByStoreId(UInteger... values) {
        return fetch(Store.STORE.STORE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>store_id = value</code>
     */
    public org.jooq.generated.tables.pojos.Store fetchOneByStoreId(UInteger value) {
        return fetchOne(Store.STORE.STORE_ID, value);
    }

    /**
     * Fetch a unique record that has <code>store_id = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.Store> fetchOptionalByStoreId(UInteger value) {
        return fetchOptional(Store.STORE.STORE_ID, value);
    }

    /**
     * Fetch records that have <code>manager_staff_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Store> fetchRangeOfManagerStaffId(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(Store.STORE.MANAGER_STAFF_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>manager_staff_id IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Store> fetchByManagerStaffId(UInteger... values) {
        return fetch(Store.STORE.MANAGER_STAFF_ID, values);
    }

    /**
     * Fetch a unique record that has <code>manager_staff_id = value</code>
     */
    public org.jooq.generated.tables.pojos.Store fetchOneByManagerStaffId(UInteger value) {
        return fetchOne(Store.STORE.MANAGER_STAFF_ID, value);
    }

    /**
     * Fetch a unique record that has <code>manager_staff_id = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.Store> fetchOptionalByManagerStaffId(UInteger value) {
        return fetchOptional(Store.STORE.MANAGER_STAFF_ID, value);
    }

    /**
     * Fetch records that have <code>address_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Store> fetchRangeOfAddressId(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(Store.STORE.ADDRESS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address_id IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Store> fetchByAddressId(UInteger... values) {
        return fetch(Store.STORE.ADDRESS_ID, values);
    }

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Store> fetchRangeOfLastUpdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Store.STORE.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Store> fetchByLastUpdate(LocalDateTime... values) {
        return fetch(Store.STORE.LAST_UPDATE, values);
    }
}
