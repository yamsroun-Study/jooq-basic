/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.Staff;
import org.jooq.generated.tables.records.StaffRecord;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class StaffDao extends DAOImpl<StaffRecord, org.jooq.generated.tables.pojos.Staff, UInteger> {

    /**
     * Create a new StaffDao without any configuration
     */
    public StaffDao() {
        super(Staff.STAFF, org.jooq.generated.tables.pojos.Staff.class);
    }

    /**
     * Create a new StaffDao with an attached configuration
     */
    public StaffDao(Configuration configuration) {
        super(Staff.STAFF, org.jooq.generated.tables.pojos.Staff.class, configuration);
    }

    @Override
    public UInteger getId(org.jooq.generated.tables.pojos.Staff object) {
        return object.getStaffId();
    }

    /**
     * Fetch records that have <code>staff_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchRangeOfStaffId(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(Staff.STAFF.STAFF_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>staff_id IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchByStaffId(UInteger... values) {
        return fetch(Staff.STAFF.STAFF_ID, values);
    }

    /**
     * Fetch a unique record that has <code>staff_id = value</code>
     */
    public org.jooq.generated.tables.pojos.Staff fetchOneByStaffId(UInteger value) {
        return fetchOne(Staff.STAFF.STAFF_ID, value);
    }

    /**
     * Fetch a unique record that has <code>staff_id = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.Staff> fetchOptionalByStaffId(UInteger value) {
        return fetchOptional(Staff.STAFF.STAFF_ID, value);
    }

    /**
     * Fetch records that have <code>first_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchRangeOfFirstName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff.STAFF.FIRST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchByFirstName(String... values) {
        return fetch(Staff.STAFF.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchRangeOfLastName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff.STAFF.LAST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchByLastName(String... values) {
        return fetch(Staff.STAFF.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>address_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchRangeOfAddressId(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(Staff.STAFF.ADDRESS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address_id IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchByAddressId(UInteger... values) {
        return fetch(Staff.STAFF.ADDRESS_ID, values);
    }

    /**
     * Fetch records that have <code>picture BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchRangeOfPicture(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(Staff.STAFF.PICTURE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>picture IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchByPicture(byte[]... values) {
        return fetch(Staff.STAFF.PICTURE, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff.STAFF.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchByEmail(String... values) {
        return fetch(Staff.STAFF.EMAIL, values);
    }

    /**
     * Fetch records that have <code>store_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchRangeOfStoreId(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(Staff.STAFF.STORE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>store_id IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchByStoreId(UInteger... values) {
        return fetch(Staff.STAFF.STORE_ID, values);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchRangeOfActive(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(Staff.STAFF.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchByActive(Byte... values) {
        return fetch(Staff.STAFF.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff.STAFF.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchByUsername(String... values) {
        return fetch(Staff.STAFF.USERNAME, values);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(Staff.STAFF.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchByPassword(String... values) {
        return fetch(Staff.STAFF.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchRangeOfLastUpdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Staff.STAFF.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Staff> fetchByLastUpdate(LocalDateTime... values) {
        return fetch(Staff.STAFF.LAST_UPDATE, values);
    }
}
